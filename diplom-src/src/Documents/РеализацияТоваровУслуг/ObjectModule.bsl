
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина; 
	// {{Мымрин С. В.
	// Движения в регистр "Выполненые работы"
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;

	Если Договор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		Для Каждого ТекСтрокаУслуги Из Услуги Цикл  
			Если ТекСтрокаУслуги.Номенклатура = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить() Тогда
				Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.ДобавитьПриход();
				Движение.Период = Дата;
				Движение.Клиент = Контрагент;
				Движение.Договор = Договор;   
				Движение.ОписаниеРабот = ТекСтрокаУслуги.Номенклатура.Наименование;
				Движение.Сумма = ТекСтрокаУслуги.Сумма;
				Движение.КоличествоЧасов = ТекСтрокаУслуги.Количество;
			КонецЕсли;
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.Клиент = Контрагент;
			Движение.Договор = Договор;
			Движение.ОписаниеРабот = ТекСтрокаУслуги.Номенклатура.Наименование;
			Движение.Сумма = ТекСтрокаУслуги.Сумма;
			Движение.КоличествоЧасов = ТекСтрокаУслуги.Количество;
		КонецЦикла;
	КонецЕсли;
	//Мымрин С. В.}}
		
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ВКМ_ЗаполнитьНаОснованииДокументовОбслуживаниеКлиента() Экспорт
	// {{Мымрин С. В.
	// Заполнение таблицы "Услуги"
	НоменклатураАП = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРС = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	Услуги.Очистить();
	Если НЕ ЗначениеЗаполнено(НоменклатураАП) ИЛИ НЕ ЗначениеЗаполнено(НоменклатураРС) Тогда
		ОбщегоНазначения.СообщитьПользователю("Заполните константы ""Номенклатура Абонентская Плата"" и ""Номенклатура Работы Специалиста"".");   
		Возврат;
	КонецЕсли; 
	СуммаАП = Договор.ВКМ_СуммаАбонентскойПлаты;
	Если СуммаАП > 0 Тогда
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = НоменклатураАП;
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Цена = СуммаАП; 
		НоваяСтрока.Сумма = СуммаАП; 
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовПриход КАК КоличествоЧасов,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаПриход КАК Сумма
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(
		|			&НачалоМесяца,
		|			&ОкончаниеМесяца,
		|			,
		|			Договор = &Договор
		|				И Клиент = &Клиент) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты";
	
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Клиент", Контрагент);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ОкончаниеМесяца", КонецМесяца(Дата));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = НоменклатураРС;
		НоваяСтрока.Количество = Выборка.КоличествоЧасов;
		НоваяСтрока.Цена = Выборка.Сумма / Выборка.КоличествоЧасов; 
		НоваяСтрока.Сумма = Выборка.Сумма;
	КонецЦикла;
	//Мымрин С. В.}}
КонецПроцедуры

#КонецОбласти

#КонецЕсли
